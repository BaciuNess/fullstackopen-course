{"version":3,"sources":["components/Filter.js","components/Form.js","components/Person.js","components/Persons.js","components/Notification.js","services/personService.js","App.js","index.js"],"names":["Filter","handleChange","onChange","Form","handleSubmit","handleNameChange","handleNumberChange","onSubmit","type","Person","person","handleDeleteClick","name","number","onClick","id","Persons","persons","searchedWord","filter","toLowerCase","includes","map","key","Notification","message","notificationStyle","color","className","style","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setSearchedWord","newName","setNewName","newNumber","setNewNumber","notificationMessage","setNotificationMessage","notificationColor","setNotificationColor","useEffect","personService","initialPersons","event","target","value","trim","preventDefault","personObject","some","confirmMessage","window","confirm","personWithSameName","find","returnedPerson","setTimeout","catch","error","console","log","String","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1141730.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({handleChange}) => {\r\n  return (\r\n    <div>\r\n      Filter shown with: <input onChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Form = ({handleSubmit, handleNameChange, handleNumberChange}) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name: <input onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input onChange={handleNumberChange} />\r\n        </div>\r\n\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst Person = ({person, handleDeleteClick}) => {\r\n  return (\r\n    <li>\r\n      {person.name} {person.number + ' '}\r\n      <button onClick={() => handleDeleteClick(person.name, person.id)}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Persons = ({persons, handleDeleteClick, searchedWord}) => {\r\n  return (\r\n    <ul>\r\n      {persons\r\n        .filter(person => person.name.toLowerCase().includes(searchedWord))\r\n        .map(person => (\r\n          <Person\r\n            key={person.id}\r\n            person={person}\r\n            handleDeleteClick={handleDeleteClick}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst Notification = ({message, color}) => {\r\n  const notificationStyle = {\r\n    color: color,\r\n  };\r\n\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification\" style={notificationStyle}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deleteData = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {getAll, create, deleteData, update};\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport Filter from './components/Filter';\r\nimport Form from './components/Form';\r\nimport Persons from './components/Persons';\r\nimport Notification from './components/Notification';\r\nimport personService from './services/personService';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [searchedWord, setSearchedWord] = useState('');\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [notificationMessage, setNotificationMessage] = useState(null);\r\n  const [notificationColor, setNotificationColor] = useState('');\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then(initialPersons => {\r\n      setPersons(initialPersons);\r\n    });\r\n  }, []);\r\n\r\n  const handleDeleteClick = (name, id) => {\r\n    if (window.confirm(`Delete ${name} ?`)) {\r\n      personService.deleteData(id).then(data => {\r\n        setPersons(persons.filter(person => person.id !== id));\r\n        setNotificationColor('green');\r\n        setNotificationMessage(`${name} was deleted`);\r\n        setTimeout(() => {\r\n          setNotificationMessage(null);\r\n        }, 5000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const addPerson = event => {\r\n    event.preventDefault();\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    const hasSameName = persons.some(person => person.name === newName);\r\n\r\n    if (hasSameName) {\r\n      const confirmMessage = window.confirm(\r\n        `${newName} is already added to phonebook, replace the old number with a new one?`,\r\n      );\r\n      const personWithSameName = persons.find(\r\n        person => person.name === newName,\r\n      );\r\n\r\n      if (confirmMessage) {\r\n        personService\r\n          .update(personWithSameName.id, personObject)\r\n          .then(returnedPerson => {\r\n            setPersons(\r\n              persons.map(person =>\r\n                person.name === personWithSameName.name\r\n                  ? returnedPerson\r\n                  : person,\r\n              ),\r\n            );\r\n            setNotificationColor('green');\r\n            setNotificationMessage('Updated ' + personObject.name);\r\n            setTimeout(() => {\r\n              setNotificationMessage(null);\r\n            }, 5000);\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response.data);\r\n            setNotificationColor('red');\r\n            setNotificationMessage(String(error.response.data.error));\r\n            setTimeout(() => {\r\n              setNotificationMessage(null);\r\n            }, 5000);\r\n            setPersons(\r\n              persons.filter(person => person.id !== personWithSameName.id),\r\n            );\r\n          });\r\n      }\r\n    } else\r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson));\r\n          setNotificationColor('green');\r\n          setNotificationMessage('Added ' + personObject.name);\r\n          setTimeout(() => {\r\n            setNotificationMessage(null);\r\n          }, 5000);\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data);\r\n          setNotificationColor('red');\r\n          setNotificationMessage(String(error.response.data.error));\r\n          setTimeout(() => {\r\n            setNotificationMessage(null);\r\n          }, 5000);\r\n        });\r\n  };\r\n\r\n  const handleNameChange = event => {\r\n    setNewName(event.target.value.trim());\r\n  };\r\n\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value.trim());\r\n  };\r\n\r\n  const handleFilterChange = event => {\r\n    const searchedWord = event.target.value.trim().toLowerCase();\r\n    setSearchedWord(searchedWord);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <Notification message={notificationMessage} color={notificationColor} />\r\n      <Filter handleChange={handleFilterChange} />\r\n\r\n      <h2>Add a new</h2>\r\n      <Form\r\n        handleSubmit={addPerson}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={persons}\r\n        searchedWord={searchedWord}\r\n        handleDeleteClick={handleDeleteClick}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}